C51 COMPILER V9.59.0.0   PID                                                               05/23/2025 13:52:37 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN .\Objects\pid.obj
COMPILER INVOKED BY: D:\RoboMaster\SoftWare\MDK537\C51\BIN\C51.EXE pid.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\pid.lst) OBJECT(.\Objects\pid.obj)

line level    source

   1          #include "pid.h"
   2          
   3          // 初始化PID参数
   4          void PID_Init(PID_t *pid, float kp, float ki, float kd, float min, float max)
   5          {
   6   1          pid->kp = kp;
   7   1          pid->ki = ki;
   8   1          pid->kd = kd;
   9   1          pid->error = 0;
  10   1          pid->prev_error = 0;
  11   1          pid->integral = 0;
  12   1          pid->derivative = 0;
  13   1          pid->output = 0;
  14   1          pid->output_min = min;
  15   1          pid->output_max = max;
  16   1      }
  17          
  18          // PID计算
  19          float PID_Compute(PID_t *pid, float setpoint, float input)
  20          {
  21   1          // 计算误差
  22   1          pid->error = setpoint - input;
  23   1          
  24   1          // 积分项
  25   1          pid->integral += pid->error;
  26   1          
  27   1          // 限制积分项大小，防止积分饱和
  28   1          if(pid->integral > 100) pid->integral = 100;
  29   1          if(pid->integral < -100) pid->integral = -100;
  30   1          
  31   1          // 微分项
  32   1          pid->derivative = pid->error - pid->prev_error;
  33   1          
  34   1          // 计算PID输出
  35   1          pid->output = pid->kp * pid->error + pid->ki * pid->integral + pid->kd * pid->derivative;
  36   1          
  37   1          // 限制输出范围
  38   1          if(pid->output > pid->output_max) pid->output = pid->output_max;
  39   1          if(pid->output < pid->output_min) pid->output = pid->output_min;
  40   1          
  41   1          // 保存当前误差作为下一次的前一个误差
  42   1          pid->prev_error = pid->error;
  43   1          
  44   1          return pid->output;
  45   1      }
  46          
  47          // 重置PID状态
  48          void PID_Reset(PID_t *pid)
  49          {
  50   1          pid->error = 0;
  51   1          pid->prev_error = 0;
  52   1          pid->integral = 0;
  53   1          pid->derivative = 0;
  54   1          pid->output = 0;
C51 COMPILER V9.59.0.0   PID                                                               05/23/2025 13:52:37 PAGE 2   

  55   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    687    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
